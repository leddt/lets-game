@page "/group/{slug}/propose-event"
@model LetsGame.Web.Pages.Groups.ProposeEvent

@{
    ViewData["Title"] = "Propose a session";
    Layout = "_AuthenticatedLayout";
}

@section Styles {
    <link rel="stylesheet" href="https://unpkg.com/vue-cal@4.2.0/dist/vuecal.css"/>
    <link rel="stylesheet" href="/css/vuecal.theme.css" asp-append-version="true"/>
}

@section Scripts
{
    <script src="https://unpkg.com/vue@3.0.5/dist/vue.global.prod.js"></script>
    <script src="https://unpkg.com/vue-cal@4.2.0/dist/vuecal.umd.min.js"></script>
    <script src="https://unpkg.com/vue-cal@4.2.0/dist/drag-and-drop.js"></script>
    <script src="/js/propose-calendar.js" asp-append-version="true"></script>
}

<h1 class="display-4">Propose a session</h1>

@if (Model.PickedGameId.HasValue)
{
    <a asp-page="ProposeEvent" asp-route-slug="@Model.Group.Slug" class="btn btn-primary">Start over</a>
}

<h2>Which game will we play?</h2>

<div class="row row-cols-1 row-cols-sm-2 row-cols-lg-3 row-cols-xl-4">
    @foreach (var game in Model.Group.Games)
    {
        <form method="post" asp-page-handler="PickGame">
            <input type="hidden" asp-for="PickedGameId" value="@game.Id"/>

            <div class="col mb-4">
                <game-card name="@game.Name" image-id="@game.IgdbImageId" class="@(game.Id == Model.PickedGameId ? "outlined" : "")">
                    @if (Model.PickedGameId == null)
                    {
                        <button type="submit" class="btn btn-light stretched-link opacity-0" title="Choose @game.Name">Choose</button>
                    }
                </game-card>
            </div>
        </form>
    }
</div>

@if (Model.PickedGameId.HasValue)
{
    <form method="post" asp-page-handler="Propose">
        <div class="row">
            <div class="col col-xl-8">
                <h2>When can we play?</h2>
                <p>Add as many dates as you want</p>

                <input asp-for="PickedGameId" type="hidden"/>

                <p>
                    <em>Click</em> in empty space to add a slot.<br>
                    <em>Double click</em> a slot to remove it.<br>
                    Only the start time matters.
                </p>
                <div id="propose-calendar">
                    <div style="height: 580px; max-height: 80vh" class="mb-3">
                        <vue-cal ref="vuecal"
                                 active-view="week"
                                 :disable-views="['years', 'year', 'month', 'day']"
                                 :hide-view-selector="true"
                                 :editable-events="{title: false, create: false, drag: true, resize: false}"
                                 :snap-to-time="15"
                                 :time-cell-height="20"
                                 :today-button="true"
                                 :min-date="minimumDate"
                                 :start-week-on-sunday="true"
                                 @@event-dblclick="handleEventDblclick"
                                 @@cell-click="handleCellClick"
                                 @@event-delete="eventRemoved"
                                 @@event-create="eventUpdated"
                                 @@event-drag-create="eventUpdated"
                                 @@event-change="eventUpdated">
                            <template v-slot:event="{event}">
                                <div class="vuecal__event-time">{{event.start.formatTime("h:mm {am}")}}</div>
                            </template>
                            <template v-slot:time-cell="{ hours, minutes }">
                                <div class="vuecal__time-cell-line"></div>
                                <div class="vuecal__time-cell-line-mid"></div>
                                <div class="d-flex">
                                    <div v-for="n in 7" class="flex-grow-1">{{getTime(hours, minutes)}}</div>
                                </div>
                            </template>
                        </vue-cal>
                        <template v-for="(occurence, index) in occurences">
                            <input :key="`start-${index}`"
                                   type="hidden"
                                   :name="`ProposedDatesAndTimes[${index}]`"
                                   :value="occurence.start.format('{YYYY}-{MM}-{DD}T{HH}:{mm}')"/>
                        </template>
                    </div>

                    <h2>Anything to add?</h2>
                    <form-group for="Details" as="TextArea"/>

                    <button type="submit" class="btn btn-primary">Submit</button>
                </div>
            </div>
        </div>
    </form>
}