@using LetsGame.Web.Services
@using LetsGame.Web.Services.Igdb.Models
@using System.Text.Encodings.Web
@model GroupModel
@inject UserManager<AppUser> UserManager;
@inject DateService DateService;
@inject GroupService GroupService;

@{
    var currentUserId = UserManager.GetUserId(User);
}

<h2>Proposed sessions</h2>

@if (!Model.ProposedEvents.Any())
{
    <p>There are no gaming sessions being planned right now.</p>
}

<a asp-page="ProposeEvent" asp-route-slug="@Model.Group.Slug" class="btn btn-primary">Propose a session</a>

<div class="row row-cols-1 pt-3">
    @foreach (var e in Model.ProposedEvents)
    {
        <div class="col mb-4">
            <div class="card bg-light" id="proposed-event-@e.Id">
                <div class="row no-gutters">
                    <div class="col-md-4 fill">
                        <img src="@Image.GetScreenshotMedUrl(e.Game.IgdbImageId)" class="card-img" alt="Screenshot from @e.Game.Name"/>
                    </div>
                    <div class="col-md-8">
                        <div class="card-body">
                            <div class="d-flex align-items-center justify-content-between mb-2">
                                <h4 class="card-title m-0">@e.Game.Name</h4>
                                @if (Model.IsGroupOwner || e.CreatorId == Model.UserId)
                                {
                                    <form asp-page-handler="DeleteEvent">
                                        <input type="hidden" asp-for="EventId" value="@e.Id"/>
                                        <button type="submit" class="btn btn-sm btn-outline-danger" data-tooltip title="Cancel session" onclick="return confirm('Cancel this @(JavaScriptEncoder.Default.Encode(e.Game.Name)) session?')">&times;</button>
                                    </form>
                                }
                            </div>
                            <blockquote class="blockquote">@e.Details</blockquote>
                            @if (e.CreatorId != null)
                            {
                                <p class="card-text">Created by @Model.GetDisplayName(e.CreatorId)</p>
                            }
                            
                            <h5>Proposed time slots</h5>
                            <div class="list-group mb-2">
                                @foreach (var slot in e.Slots.OrderBy(x => x.ProposedDateAndTimeUtc))
                                {
                                    <div class="list-group-item">
                                        <div class="d-flex align-items-center justify-content-between">
                                            <h6>@DateService.FormatUtcToUserFriendlyDate(slot.ProposedDateAndTimeUtc)</h6>
                                            @if (Model.IsGroupOwner || e.CreatorId == Model.UserId)
                                            {
                                                <form asp-page-handler="PickSlot">
                                                    <input type="hidden" asp-for="SlotId" value="@slot.Id"/>
                                                    <button type="submit"
                                                            class="btn btn-sm btn-success"
                                                            data-tooltip
                                                            title="Pick this slot as the winner"
                                                            onclick="return confirm('Pick @JavaScriptEncoder.Default.Encode(DateService.FormatUtcToUserFriendlyDate(slot.ProposedDateAndTimeUtc)) as the winning time slot for this @JavaScriptEncoder.Default.Encode(e.Game.Name) session?')">
                                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24">
                                                            <path fill="white" d="M20.285 2l-11.285 11.567-5.286-5.011-3.714 3.716 9 8.728 15-15.285z"/>
                                                        </svg>
                                                    </button>
                                                </form>
                                            }
                                        </div>
                                        <div class="d-flex align-items-center flex-wrap">
                                            <span class="mr-1">Votes:</span>
                                            @foreach (var vote in slot.Votes.OrderBy(x => x.VotedAtUtc))
                                            {
                                                <avatar name="@Model.GetDisplayName(vote.VoterId)"/>
                                            }
                                            @if (!slot.Votes.Any(v => v.VoterId == currentUserId))
                                            {
                                                <form asp-page-handler="VoteSlot" data-update="proposed-event-@e.Id">
                                                    <input type="hidden" asp-for="SlotId" value="@slot.Id"/>
                                                    <avatar is-button="true" is-add="true" name="Add your vote for this slot"/>
                                                </form>
                                            }
                                            else
                                            {
                                                <form asp-page-handler="UnvoteSlot" data-update="proposed-event-@e.Id">
                                                    <input type="hidden" asp-for="SlotId" value="@slot.Id"/>
                                                    <avatar is-button="true" is-remove="true" name="Remove your vote from this slot"/>
                                                </form>
                                            }
                                        </div>
                                    </div>
                                }
                            </div>

                            @if (e.CantPlays.Any())
                            {
                                <div class="d-flex align-items-center flex-wrap">
                                    <span class="mr-1">Can't play:</span>
                                    @foreach (var vote in e.CantPlays.OrderBy(x => x.AddedAtUtc))
                                    {
                                        <avatar name="@Model.GetDisplayName(vote.UserId)"/>
                                    }
                                </div>
                            }

                            @if (!e.CantPlays.Any(x => x.UserId == Model.UserId))
                            {
                                <form asp-page-handler="CantPlay" data-update="proposed-event-@e.Id">
                                    <input type="hidden" asp-for="EventId" value="@e.Id"/>
                                    <button type="submit" class="btn btn-sm btn-secondary" data-tooltip title="Remove your votes from all slots and indicate that you can't join this session">I can't play</button>
                                </form>
                            }

                            @{ var missingVotes = GroupService.GetMissingVotes(Model.Group.Memberships, e).ToList(); }
                            @if (missingVotes.Any())
                            {
                                <hr/>
                                <div class="d-flex align-items-center flex-wrap">
                                    <span class="mr-1">Missing votes:</span>
                                    @foreach (var member in missingVotes)
                                    {
                                        <avatar name="@member.DisplayName"/>
                                    }
                                </div>

                                @if (Model.IsGroupOwner || e.CreatorId == Model.UserId)
                                {
                                    <form asp-page-handler="Remind" data-update="proposed-event-@e.Id">
                                        <input type="hidden" asp-for="EventId" value="@e.Id"/>
                                        <button type="submit" class="btn btn-sm btn-secondary" data-tooltip title="Send an email to remind missing voters to vote on this session." onclick="return confirm('Send email reminder to @missingVotes.Count member(s)?')">Remind</button>
                                    </form>

                                    @if (e.ReminderSentAtUtc.HasValue)
                                    {
                                        <em>Reminder sent @DateService.FormatUtcToUserFriendlyDate(e.ReminderSentAtUtc.Value)</em>
                                    }
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>