@using LetsGame.Web.Services.Igdb.Models
@using LetsGame.Web.Services
@using System.Text.Encodings.Web
@model GroupModel
@inject UserManager<AppUser> UserManager;
@inject DateService DateService;

@{
    var currentUserId = UserManager.GetUserId(User);
}

@if (Model.UpcomingEvents.Any())
{
    <h2>Upcoming sessions</h2>
    <div class="row row-cols-1 row-cols-xl-2 pt-3">
        @foreach (var e in Model.UpcomingEvents)
        {
            <div class="col mb-4">
                <div class="card">
                    <div class="row no-gutters">
                        <div class="col-md-4 fill">
                            <img src="@Image.GetScreenshotMedUrl(e.Game.IgdbImageId)" class="card-img" alt="Screenshot from @e.Game.Name"/>
                        </div>
                        <div class="col-md-8">
                            <div class="card-body">
                                <div class="d-flex align-items-center justify-content-between mb-2">
                                    <h4 class="card-title m-0">@e.Game.Name</h4>
                                    @if (Model.IsGroupOwner || e.CreatorId == Model.UserId)
                                    {
                                        <form asp-page-handler="DeleteEvent">
                                            <input type="hidden" asp-for="EventId" value="@e.Id" />
                                            <button type="submit" class="btn btn-sm btn-outline-danger" title="Cancel session" onclick="return confirm('Cancel this @(JavaScriptEncoder.Default.Encode(e.Game.Name)) session?')">&times;</button>
                                        </form>
                                    }
                                </div>
                                <blockquote class="blockquote">@e.Details</blockquote>
                                <p class="card-text">Created by @Model.GetDisplayName(e.CreatorId)</p>
                                <h5>
                                    @DateService.FormatUtcToUserFriendlyDate(e.ChosenDateAndTimeUtc.Value)
                                </h5>
                                @{
                                    var slot = e.Slots.FirstOrDefault(s => s.ProposedDateAndTimeUtc == e.ChosenDateAndTimeUtc);
                                }
                                <div class="d-flex align-items-center flex-wrap">
                                    <span class="mr-1">Gamers:</span>
                                    @foreach (var vote in slot.Votes.OrderBy(x => x.VotedAtUtc))
                                    {
                                        <avatar name="@Model.GetDisplayName(vote.VoterId)"/>
                                    }
                                    @if (!slot.Votes.Any(v => v.VoterId == currentUserId))
                                    {
                                        <form asp-page-handler="VoteSlot">
                                            <input type="hidden" asp-for="SlotId" value="@slot.Id"/>
                                            <avatar is-button="true" is-add="true" name="Join this session"/>
                                        </form>
                                    }
                                    else
                                    {
                                        <form asp-page-handler="UnvoteSlot">
                                            <input type="hidden" asp-for="SlotId" value="@slot.Id"/>
                                            <avatar is-button="true" is-remove="true" name="Leave this session"/>
                                        </form>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}